{"version":3,"sources":["thaw-gcd.es6.js"],"names":["parseInt","m","n","isNaN","Error","gcd","partial","exports","define","amd","global","module","window"],"mappings":"AAOC,YAAkB,CAUlB,eAAoB,CAOnB,GAHA,EAAIA,SAASC,CAAT,CAAY,EAAZ,CAGJ,CAFA,EAAID,SAASE,CAAT,CAAY,EAAZ,CAEJ,CAAIC,MAAMF,CAAN,GAAYE,MAAMD,CAAN,CAAhB,CACC,KAAM,IAAIE,MAAJ,CAAU,mBAAV,CAAN,CADD,WAIe,EAAJ,EAJX,CAKQC,EAAIJ,CAAJ,CAAO,CAACC,CAAR,CALR,CAMWD,EAAIC,CANf,CAOQG,EAAIH,CAAJ,CAAOD,CAAP,CAPR,CAQiB,CAAN,IARX,CASQA,CATR,CAWQI,EAAIH,CAAJ,CAAOD,EAAIC,CAAX,CAER,CAGDG,EAAIC,OAAJ,CAAc,KAAK,KAAKD,EAAIJ,CAAJ,CAAOC,CAAP,CAjCN,CAoCK,WAAnB,QAAOK,QApCO,CAsCW,UAAlB,QAAOC,OAAP,EAAgCA,OAAOC,GAtChC,CAuCjBD,OAAO,IAAM,CACZ,MAAOH,EACP,CAFD,CAvCiB,CA2CjBK,EAAOL,GAAP,CAAaA,CA3CI,CAqCjBM,OAAOJ,OAAP,CAAiBF,CAQlB,CA7CA,EA6CmB,WAAlB,QAAOO,OAAP,CAAyCF,MAAzC,CAAgCE,MA7CjC,C","file":"unknown","sourcesContent":["/**\n * thaw-gcd\n *\n * @copyright 2017 Tom Weatherhead\n * @license MIT\n * @version 0.0.0\n */\n(function (global) {\n\n\t/**\n\t * gcd\n\t *\n\t * @method gcd\n\t * @param  {Mixed}   m          String, Int or Float representation of the first number\n\t * @param  {Mixed}   n          String, Int or Float representation of the second number\n\t * @return {Int}                The greatest common divisor of m and n\n\t */\n\tfunction gcd (m, n) {\n\t\t// See https://en.wikipedia.org/wiki/Euclidean_algorithm\n\n\t\t// TODO: Ensure than m and n are integers. Convert if necessary.\n\t\tm = parseInt(m, 10);\n\t\tn = parseInt(n, 10);\n\n\t\tif (isNaN(m) || isNaN(n)) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t// } else if (m < 0) {\n\t\t\t// return gcd(-m, n);\n\t\t} else if (n < 0) {\n\t\t\treturn gcd(m, -n);\n\t\t} else if (m < n) {\n\t\t\treturn gcd(n, m);\n\t\t} else if (n === 0) {\n\t\t\treturn m;\n\t\t} else {\n\t\t\treturn gcd(n, m % n);\n\t\t}\n\t}\n\n\t// Partial application for functional programming:\n\tgcd.partial = m => n => gcd(m, n);\n\n\t// CommonJS, AMD, script tag\n\tif (typeof exports !== 'undefined') {\n\t\tmodule.exports = gcd;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(() => {\n\t\t\treturn gcd;\n\t\t});\n\t} else {\n\t\tglobal.gcd = gcd;\n\t}\n}(typeof window !== 'undefined' ? window : global));\n"]}